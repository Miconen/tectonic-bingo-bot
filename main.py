import os
import sys
from typing import Dict

from models.tile import Tile, TileState, TileTheme
from models.criteria import Count
from models.graph import GraphNode
from bot.utils import neighbor_map

from dotenv import load_dotenv
from bot.bot import bot
from state.state import state
from models.team import Team


if __name__ == "__main__":
    load_dotenv()

    token = os.getenv("BOT_TOKEN")
    if not token:
        print("No token provided in environment variables. Exiting...")
        sys.exit(1)

    # Generate board -> team -> state

    tiles = [
        Tile(
            TileState.UNLOCKED,
            TileTheme.MISCELLANEOUS,
            {"Fang": Count(1), "Purple Sweets": Count(100)},
            id=1,
            image="https://oldschool.runescape.wiki/images/Zamorak_hilt_detail.png",
            name="Tile with multiple requirements",
            description="This is a description of the tile. It has multiple requirements.",
            required_for_completetion=2,
        ),
        Tile(
            TileState.UNLOCKED,
            TileTheme.DROPS,
            {"Shadow": Count(1)},
            id=2,
            image="https://oldschool.runescape.wiki/images/Zamorak_hilt_detail.png",
            name="Slayer tile",
            description="""
                Obtain 5 unique slayer related drops. You may obtain multiple different uniques from the same boss (no dupes). Only the uniques listed below will count towards the tile.
            """,
            required_for_completetion=1,
            rules_link="https://www.google.com",
        ),
        Tile(
            TileState.LOCKED,
            TileTheme.DROPS,
            {"Shadow": Count(1)},
            id=3,
            image="https://oldschool.runescape.wiki/images/Zamorak_hilt_detail.png",
            name="Locked by default tile",
            description="""
                Obtain 5 unique slayer related drops. You may obtain multiple different uniques from the same boss (no dupes). Only the uniques listed below will count towards the tile.
            """,
            required_for_completetion=1,
            rules_link="https://www.google.com",
        ),
    ]

    # Fille the rest of tiles
    for i in range(len(tiles) + 1, 36):
        tiles.append(
            Tile(
                TileState.LOCKED,
                TileTheme.DROPS,
                {f"Tile {i} req": Count(1)},
                id=i,
                image="https://oldschool.runescape.wiki/images/Zamorak_hilt_detail.png",
                name="AUTOGENERATED locked test tile",
                description="""
                    This tile was autogenerated for testing purposes.
                """,
                required_for_completetion=1,
                rules_link="https://www.google.com",
            )
        )

    # Generate base board
    board: Dict[int, GraphNode] = {}
    for tile in tiles:
        node = board.setdefault(tile.id, GraphNode(tile))
        for n in neighbor_map[tile.id]:
            node.add_neighbor(n)

    teams = [Team([136856906139566081], board), Team([211967129266814986], board)]

    # Append base board to each team
    for i, team in enumerate(teams):
        state.teams.update({f"Team {i}": team})

    bot.run(token)
